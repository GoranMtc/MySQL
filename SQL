

---------------------------------------------
CREATE PROCEDURE sp1 (x VARCHAR(5))
BEGIN
  declare xname VARCHAR(5) DEFAULT 'bob';  --< declare, default
  declare newname VARCHAR(5);
  declare xid INT;

  SELECT xname, id INTO newname, xid       --< select into variable
    FROM table1 WHERE xname = xname;
  
  SELECT newname;                          --< select variable
END;

---------------------------------------------LOOP
CREATE PROCEDURE procedure1(p1 int)
BEGIN
    label1: LOOP         --< label , loop
    
`   set p1 = p1 + 1;

    if p1 < 10 then
      ITERATE label1;    --< iterate
    end if;

    LEAVE label1;        --< leave
  
    END LOOP label1;     --< end loop

    set @x = p1;

END;

----------------------------------------------------------REPEAT UNTIL
create procedure DoRepeat( p1 int )
BEGIN
    SET @x = 0;

    REPEAT                    --< repeat
      set @x = @x + 1;
    UNTIL @x > p1 END REPEAT; --< until, end repeat

END

---------------------------------------------------------IF ELSEIF ELSE END
DELIMITER //

CREATE FUNCTION SimpleCompare(n int, m int)
  RETURNS VARCHAR(20)

  BEGIN
    declare s varchar(20);

    IF n > m then set s = '>';           --< if
    
    ELSEIF n = m THEN set s = '=';       --< elseif
    
    ELSE set s = '<';                    --< else
    
    END IF;                              --< end if

    SET s = CONCAT(n, ' ', s, ' ', m);

    RETURN s;
  END //

DELIMITER ;

---------------------------------------------------------CASE
create procedure p()
  begin
    declare v int default 1;

    CASE v                       --< case
      WHEN 2 THEN SELECT v;      --< when then select

      WHEN 3 THEN SELECT 0;      --< when then select

      ELSE                       --< else
        BEGIN                    --< begin
          
        END;                     --< end
    END CASE;                    --< end case

end;

-------------------------------------------------------WHILE
create procedure DoWhile()
begin
  declare v1 int default 5;

  WHILE v1 > 0 do         --< while do
    ...
    set v1 = v1 - 1;
  END WHILE;              --< end while
end;

-------------------------------------------------------CONDITION, CONTINUE HANDLER
declare no_such_table CONDITION FOR 1051;
declare CONTINUE HANDLER FOR no_such_table
  begin
    -- body of handler
  end;

----------------------------------------------------CURSOR
CREATE PROCEDURE myProc (in_customer_id INT)
BEGIN
    DECLARE l_first_name        varchar(30);
    DECLARE l_id                int;
    DECLARE l_city              varchar(30);
    DECLARE no_more_departments int;
    
    DECLARE dept_csr CURSOR FOR
        select id,first_name, city
        from employee;
    
    DECLARE CONTINUE HANDLER FOR NOT FOUND    --< contnue handler for not found
    SET no_more_departments=1;
    
    SET no_more_departments=0;
    OPEN dept_csr;
    REPEAT
      FETCH dept_csr INTO l_id,l_first_name,l_city;
    
      select l_id;
      select l_first_name;
      select l_city;
    
    UNTIL no_more_departments
    END REPEAT;
    
   CLOSE dept_csr;
   
   SET no_more_departments=0;
    
   END




CREATE PROCEDURE sp2 (x VARCHAR(5))
BEGIN
  declare xname VARCHAR(5) DEFAULT 'bob';
  declare newname VARCHAR(5);
  declare xid INT;
  
  DECLARE done TINYINT DEFAULT 0;                --<
  
  DECLARE cur1 CURSOR FOR SELECT xname, id FROM table1; --< declare cursor
  
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1; --<contunue handler

  OPEN cur1;                                    --< open cursor

    read_loop: LOOP                             --< read loop

    FETCH FROM cur1 INTO newname, xid;          --< fetch 
    
    IF done THEN LEAVE read_loop; END IF;       --< leave loop 
    
    SELECT newname;
  
  END LOOP;                                     --< end loop

  CLOSE cur1;                                   --< close cursor
END;


----------------------------------------------------------comments
mysql> SELECT 1+1;     # This comment continues to the end of line
mysql> SELECT 1+1;     -- This comment continues to the end of line
mysql> SELECT 1    /* this is an in-line comment */ + 1;
mysql> SELECT 1+

/*
this is a 
multiple-line 
comment
*/


----------------------------------------------------partition
CREATE TABLE t1 (
    id INT,
    year_col INT
)
PARTITION BY RANGE (year_col) (
    PARTITION p0 VALUES LESS THAN (1991),
    PARTITION p1 VALUES LESS THAN (1995),
    PARTITION p2 VALUES LESS THAN (1999)
);


--discard and import
ALTER TABLE t1 DISCARD PARTITION p2, p3 TABLESPACE;

ALTER TABLE t1 IMPORT PARTITION p2, p3 TABLESPACE;

ALTER TABLE t1 TRUNCATE PARTITION p0;


ALTER TABLE t1 
add partition ( PARTITION p3 VALUES LESS THAN (2002) );


ALTER TABLE t1
    PARTITION BY HASH(id)
    PARTITIONS 8;

ALTER TABLE t1 COALESCE PARTITION 2;





----------------------------------------------------dictionary tabele


----------------------------------information_schema.partitions
select PARTITION_NAME, TABLE_ROWS
FROM INFORMATION_SCHEMA.PARTITIONS
WHERE TABLE_NAME = 't1';

----------------------------------user_variables_by_thread
select t.* 
from user_variables_by_thread  t;



----------------------------------------------------system variables



----------------------------------------------------transaction
START TRANSACTION;                                  --< start tranasction

select @A:=sum(salary) from table1 where type=1;
update table2 set summary=@A where type=1;          --< dml

COMMIT;                                             --< commit

ROLLBACK;




